compiler:
  - clang
  - gcc
sudo: required
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-6.0
      - llvm-toolchain-precise
    packages:
      #- lcov
      - ruby
      - clang-6.0
      - g++-7
      - gcc-7
before_install: git submodule update --init
install:
  - export PLATFORM=$(uname -s)
  - if [ "$CXX" = "g++" ]; then export CXX="g++-7" CC="gcc-7" CCOV="gcov-7" USE_COVERAGE="lcov" USE_COVERALLS=1; fi
  - if [ "$CXX" = "clang++" ]; then export CXX="clang++-6.0" CC="clang-6.0"; fi
  - |
    if [ "${USE_COVERALLS}" = '1' ]; then
      if [ "${USE_COVERAGE}" = 'gcov' ]; then easy_install cpp-coveralls; fi
      if [ "${USE_COVERAGE}" = 'lcov' ]; then
        pwd
        git clone https://github.com/linux-test-project/lcov.git ./lcov
        cd lcov
        sudo make install
        cd ..
        pwd
        gem install lcoveralls;
      fi
    fi
language: cpp
script:
  - mkdir build_release
  - mkdir build_debug
  - cd build_release
  - cmake -DCMAKE_BUILD_TYPE=Release ..
  - make ci
  - cd ../build_debug
  - cmake -DSTRING_SPLIT_ENABLE_COVERAGE="${USE_COVERALLS}" -DCMAKE_BUILD_TYPE=Debug ..
  - make ci
after_success:
  # Coverage
  - ls $TRAVIS_BUILD_DIR
  - ls "$TRAVIS_BUILD_DIR/build_debug"
  - ls "$TRAVIS_BUILD_DIR/build_debug/test"
  - if [ "${USE_COVERALLS}" = '1' ]; then lcoveralls --debug --retry-count 3 "$TRAVIS_BUILD_DIR/build_debug/test/test_coverage.info.cleaned" ; fi
